local Card          = require("una.card")
local Tween         = require("una.lib.tween")
local Line          = require("una.debug.line")
local displayMatrix = require("una.debug.lineMatrix")

local pos = vec(0, 5, 0)

for i = 1, Card.lastCardId do
	local e = (i - 1) / Card.lastCardId * math.pi * -2
	local cardType, cardColor = Card.fullIdToColorAndTypeId(i)
	local card = Card.new()
   	:setPos(pos + vec(math.sin(e)*5,0,math.cos(e)*5))
   	:setRot(-90,math.deg(e)+5,0)
   	:setType(cardType)
   	:setColor(cardColor)
end


---@param card Card
Card.CARD_PRESSED:register(function (card)
	Tween.new{
		from = 1.1,
		to = 1,
		duration = 0.3,
		easing = "outBack",
		tick = function (v, t)
			card:setScale(v,v,v)
		end,
		id=card.id
	}
end)

local white = textures:newTexture("1x1white",1,1):setPixel(0,0,vec(1,1,1))

---@param card Card?
---@param lastCard Card?
Card.CARD_HOVER:register(function (card, lastCard)
	if card then
		Tween.new{
			from = 0,
			to = 1,
			duration = 0.3,
			easing = "outBack",
			tick = function (v, t)
				card:setAnimPos(vec(0,0,v*0.5))
			end,
			id=card.id
		}
		Tween.new{
			from = 0,
			to = 1,
			duration = 1,
			easing = "outElastic",
			tick = function (v, t)
				card:setAnimRot(vec(0,v*15,0))
			end,
			id=card.id.."rot"
		}
	end
	if lastCard then
		Tween.new{
			from = 1,
			to = 0,
			duration = 0.2,
			easing = "inOutSine",
			tick = function (v, t)
				lastCard:setAnimPos(vec(0,0,v*0.5))
			end,
			id=lastCard.id
		}
		Tween.new{
			from = 1,
			to = 0,
			duration = 1,
			easing = "outElastic",
			tick = function (v, t)
				lastCard:setAnimRot(vec(0,v*15,0))
			end,
			id=lastCard.id.."rot"
		}
	end
end)